clusters = primary, secondary
primary.bootstrap.servers = kafka-primary-0:9092,kafka-primary-1:9092,kafka-primary-2:9092
secondary.bootstrap.servers = kafka-secondary-0:9092,kafka-secondary-1:9092,kafka-secondary-2:9092

# Направление репликации: primary -> secondary
primary->secondary.enabled = true
secondary->primary.enabled = false

# SSL/SASL (primary)
primary.security.protocol = SASL_SSL
primary.ssl.truststore.location = /bitnami/kafka/config/certs/kafka.truststore.jks
primary.ssl.truststore.password = kafka-password
primary.sasl.mechanism = PLAIN
primary.sasl.jaas.config = org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";

# SSL/SASL (secondary)
secondary.security.protocol = SASL_SSL
secondary.ssl.truststore.location = /bitnami/kafka/config/certs/kafka.truststore.jks
secondary.ssl.truststore.password = kafka-password
secondary.sasl.mechanism = PLAIN
secondary.sasl.jaas.config = org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";

# Реплицируем все топики, начинающиеся с items- или client-
primary->secondary.topics = items-.*|client-.*

# Политика именования топиков (создаем топики с тем же именем)
replication.policy.class = org.apache.kafka.connect.mirror.IdentityReplicationPolicy
replication.factor = 3

# Настройки Producer (для записи в secondary)
producer.enable.idempotence = true
producer.acks = all
producer.max.in.flight.requests.per.connection = 5

# Настройки Consumer (для чтения из primary)
consumer.auto.offset.reset = earliest
consumer.max.poll.records = 500

# Конвертеры
key.converter = org.apache.kafka.connect.converters.ByteArrayConverter
value.converter = org.apache.kafka.connect.converters.ByteArrayConverter
header.converter = org.apache.kafka.connect.converters.ByteArrayConverter

# Настройки синхронизации
refresh.topics.interval.seconds = 10
refresh.groups.interval.seconds = 10
refresh.configs.interval.seconds = 10
sync.topic.configs.enabled = true
sync.topic.acls.enabled = true
